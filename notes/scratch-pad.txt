// const { pathname } = useLocation();
  const rrNavigate = useNavigate();
  // const rrMatch = useMatch(pathname);

  // console.log(`x:${pathname.slice(0, pathname.lastIndexOf('/'))}:`);
  
  const handleButtonClick = (href: string) => {
    rrNavigate(href, { replace: true });
  };

<Button
key={i}
// variant={pathname.search(/\/\d/g) > -1 ? 'default' : 'link'}
// variant={ ? 'default' : 'link'}
onClick={() => handleButtonClick(v.href)}
className={twMerge(pathname === v.href ? 'cursor-context-menu' : 'cursor-pointer')}
// disabled={pathname === v.href}
>{v.route}<span className="sr-only">{`navigate ${v.route}`}</span></Button>


// =========================================================================
// Working custom NavLink, BUT isActive broken on pathname
import { NavLink } from "react-router-dom";
import { RouteItems } from "@/lib/types";
import { twMerge } from "tailwind-merge";

export default function NavDesktop({ routes }: { routes: RouteItems }) {

  const className = ({ isActive, isPending }: { isActive: boolean, isPending: boolean }): string => {
    console.log('isActive  :', isActive);
    console.log('isPending :', isPending);
    
    return twMerge(
      'h-10 px-4 py-2',
      'text-orange-400 underline-offset-8 hover:underline',
      'inline-flex items-center justify-center whitespace-nowrap',
      // 'rounded-md text-sm font-medium ring-offset-background transition-colors',
      // 'focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2',
      '',
      isActive && 'pointer-events-none underline',
      isPending && 'pointer-events-none opacity-50',
    )
  }

  return (
    <nav className="hidden sm:flex">
      {routes.map((v, i) => (i < 3 &&
        <NavLink
          key={i}
          to={v.href}
          className={className}
          end={false}
        >{v.route}</NavLink>
      ))}
      {/* <div className="underline"></div> */}
    </nav>
  );
}
// =========================================================================

